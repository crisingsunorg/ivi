/**
 * Converts boolean values to bitset.
 *
 * Useful for class name assignment. Instead of concatenating strings, it is better to use interned strings that doesn't
 * require any memory allocations and super cheap to compare.
 *
 * @example
 *
 *     import css from "./button.css";
 *     // should be automatically generated by css preprocessor in `./button.css` module.
 *     const BUTTON_CLASS = [
 *        css.button,                    // 0b000
 *        css.buttonHover,               // 0b001
 *        css.buttonActive,              // 0b010
 *        css.buttonHoverActive,         // 0b011
 *        css.buttonDisabled,            // 0b100
 *        css.buttonHoverDisabled,       // 0b101
 *        css.buttonActiveDisabled,      // 0b110
 *        css.buttonHoverActiveDisabled, // 0b111
 *     ];
 *     const Button = statelessComponent((props) => (
 *       button(BUTTON_CLASS[bitset(props.hover, props.active, props.disabled)], _, props.children)
 *     );
 *
 * @param args Boolean values.
 * @returns Bitset.
 */
export function bitset<T extends boolean[]>(...args: T): number;
export function bitset(): number {
  let result = 0;
  for (let i = 0; i < arguments.length; i++) {
    if (arguments[i] === true) {
      result |= 1 << i;
    }
  }
  return result;
}
